{"version":3,"file":"static/js/870.f1495fc8.chunk.js","mappings":"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","sources":["api/Api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = 'c59d661c06ce192682a3f08ecc590a6a'\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNGFjNzI1MTA4Mjc2ZDkyM2RlMjQzOTE4NzUwNjJjNSIsInN1YiI6IjY1YjUwMjhhNGYzM2FkMDE3YTBiYTM1MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DVikyztACIvDZrPSWL56RBOBtNnjH3jDZKwNSqkZN54',\n  },\n};\n\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n})\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst fetchTrending = async () => {\n  \n  return instance.get(`trending/movie/week?api_key=${API_KEY}`,\n  options);\n\n}\n\n\nconst fetchSearch = async (query) => {\n  return instance.get(`search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`,\n  options)\n  \n \n}\n\n\nconst fetchDetails = id => {\n  return instance.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`,\n  options);\n}\n\n\nconst fetchActor = async (movieId) => {\n    return (\n        instance.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n        options)\n    )\n}\n\nconst fetchReviews = async (movieId) => {\n  return instance.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\n  options)\n   \n}\n\nexport {BASE_URL, fetchTrending, fetchSearch, fetchDetails, fetchActor, fetchReviews}\n\n\n\n\n\n\n\n\n\n\n\n","import { fetchActor } from 'api/Api';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport img from '../img/photo.jpg';\nimport './Cast.css'\nimport { BASE_URL } from 'api/Api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  \n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        setLoading(true);\n        const { data } = await fetchActor(id);\n        setCast(data.cast);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchCast();\n  }, [id]);\n\n  const elements = cast.map(\n    ({ id, character, original_name, profile_path }) => (\n      <li key={id}>\n        <img className='cast-img'\n          src={profile_path ? BASE_URL + profile_path : img}\n          alt=\"\"\n        />\n        <h3 className='cast-title'>{character}</h3>\n        <p className='cast-p'>{original_name}</p>\n      </li>\n    )\n  );\n\n  const isCast = Boolean(cast.length);\n\n  return (\n    <>\n      {loading && <p>...Loading page</p>}\n      {error && <p>{error}</p>}\n      {(isCast && <div className='cast'><ul className='cast-ul'>{elements}</ul></div>) || (\n        <p >No Cast information</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;"],"names":["API_KEY","options","method","headers","accept","Authorization","instance","axios","baseURL","BASE_URL","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","get","concat","stop","apply","arguments","fetchSearch","_ref2","_callee2","query","_context2","_x","fetchDetails","id","fetchActor","_ref3","_callee3","movieId","_context3","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","useEffect","_fetchCast","_yield$fetchActor","data","sent","t0","finish","fetchCast","elements","map","character","original_name","profile_path","_jsxs","children","_jsx","className","src","img","alt","isCast","Boolean","length","_Fragment"],"sourceRoot":""}