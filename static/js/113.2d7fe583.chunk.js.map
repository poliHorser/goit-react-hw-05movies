{"version":3,"file":"static/js/113.2d7fe583.chunk.js","mappings":"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","sources":["api/Api.jsx","components/MoviesDetailsComp/MoviesDetailsComp.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = 'c59d661c06ce192682a3f08ecc590a6a'\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNGFjNzI1MTA4Mjc2ZDkyM2RlMjQzOTE4NzUwNjJjNSIsInN1YiI6IjY1YjUwMjhhNGYzM2FkMDE3YTBiYTM1MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DVikyztACIvDZrPSWL56RBOBtNnjH3jDZKwNSqkZN54',\n  },\n};\n\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n})\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst fetchTrending = async () => {\n  \n  return instance.get(`trending/movie/week?api_key=${API_KEY}`,\n  options);\n\n}\n\n\nconst fetchSearch = async (query) => {\n  return instance.get(`search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`,\n  options)\n  \n \n}\n\n\nconst fetchDetails = id => {\n  return instance.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`,\n  options);\n}\n\n\nconst fetchActor = async (movieId) => {\n    return (\n        instance.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n        options)\n    )\n}\n\nconst fetchReviews = async (movieId) => {\n  return instance.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\n  options)\n   \n}\n\nexport {BASE_URL, fetchTrending, fetchSearch, fetchDetails, fetchActor, fetchReviews}\n\n\n\n\n\n\n\n\n\n\n\n","import { Suspense, useState, useEffect } from 'react';\nimport {Link, Outlet, useParams, useNavigate, useLocation} from 'react-router-dom';\nimport { fetchDetails } from 'api/Api';\nimport { BASE_URL } from 'api/Api';\nimport './MovieDetailsComp.css'\nimport fon from '../img/fon.jpg'\n\n\nconst MovieDetailsComp = () => {\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  \n\n  useEffect(() => {\n    const getMoviesDetails = async () => {\n      try {\n        setLoading(true);\n        const { data } = await fetchDetails(id);\n        setMovie(data);\n\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMoviesDetails();\n  }, [id]);\n\n  const backHome = () => navigate(location.state?.from || '/');\n\n  const { title, poster_path, overview, vote_average, genres } = movie || {};\n\n  return (\n    <div className='details'>\n      {loading && <p>...Loading page</p>}\n      {error && <p>Error: {error}</p>}\n      <button  className='details-btn' onClick={backHome} type=\"button\">\n        Go back\n      </button>\n      {movie && (\n        <>\n          <div className='information'>\n            <img className='det-img'\n              src={poster_path ? BASE_URL + poster_path : fon} alt={title} />\n            <div>\n              <h1 className='det-title'>{title}</h1>\n              <h2 className='det-score'>User Score:</h2>\n              <p className='det-p'>{Math.round(vote_average * 10)}%</p>\n              <h2 className='det-score'>Overview: </h2>\n              <p className='det-p'>{overview}</p>\n              <h2 className='det-score'>Genres:</h2>\n              <p className='det-p'>\n                {genres && genres.map(i => i.name).join(', ')}\n              </p>\n            </div>\n          </div>\n          <div className='information'>\n            <h2 className='det-title'>Additional information</h2>\n            <ul className='add-ul'>\n              <li className='det-score'>\n                <Link className='det-li' to={'cast'} > Cast</Link>\n              </li>\n              <li className='det-score'>\n                <Link className='det-li' to={'reviews'} >Reviews </Link>\n              </li>\n            </ul>\n            <Suspense fallback={<p>...Loading page</p>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default MovieDetailsComp","import MovieDetailsComp from \"components/MoviesDetailsComp/MoviesDetailsComp\";\n\nconst MovieDetailsPage = () => {\n  return (\n    <div>\n      <MovieDetailsComp/>\n   </div>\n )\n};\n\nexport default MovieDetailsPage;"],"names":["API_KEY","options","method","headers","accept","Authorization","instance","axios","baseURL","BASE_URL","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","get","concat","stop","apply","arguments","fetchSearch","_ref2","_callee2","query","_context2","_x","fetchDetails","id","fetchActor","_ref3","_callee3","movieId","_context3","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","location","useLocation","navigate","useNavigate","useEffect","getMoviesDetails","_yield$fetchDetails","data","sent","t0","message","finish","title","poster_path","overview","vote_average","genres","_jsxs","className","children","_jsx","onClick","_location$state","state","from","type","_Fragment","src","alt","Math","round","map","i","name","join","Link","to","Suspense","fallback","Outlet","MovieDetailsComp"],"sourceRoot":""}