{"version":3,"file":"static/js/87.c7349a61.chunk.js","mappings":"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","sources":["api/Api.jsx","components/MovieSearch/MoviesList/MoviesList.jsx","components/MovieSearch/MoviesSearchForm/MoviesSearchForm.jsx","../node_modules/nanoid/index.browser.js","components/MovieSearch/MovieSearch.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = 'c59d661c06ce192682a3f08ecc590a6a'\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNGFjNzI1MTA4Mjc2ZDkyM2RlMjQzOTE4NzUwNjJjNSIsInN1YiI6IjY1YjUwMjhhNGYzM2FkMDE3YTBiYTM1MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DVikyztACIvDZrPSWL56RBOBtNnjH3jDZKwNSqkZN54',\n  },\n};\n\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n})\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst fetchTrending = async () => {\n  \n  return instance.get(`trending/movie/week?api_key=${API_KEY}`,\n  options);\n\n}\n\n\nconst fetchSearch = async (query) => {\n  return instance.get(`search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`,\n  options)\n  \n \n}\n\n\nconst fetchDetails = id => {\n  return instance.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`,\n  options);\n}\n\n\nconst fetchActor = async (movieId) => {\n    return (\n        instance.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n        options)\n    )\n}\n\nconst fetchReviews = async (movieId) => {\n  return instance.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\n  options)\n   \n}\n\nexport {BASE_URL, fetchTrending, fetchSearch, fetchDetails, fetchActor, fetchReviews}\n\n\n\n\n\n\n\n\n\n\n\n","import { Link, useLocation } from 'react-router-dom';\nimport './MoviesList.css'\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n  \n  return (\n    <div>\n      <ul className='movies-list'>{items.map(({ id, title }) => (\n        <li key={id} className='movie-li'>\n          <Link className=\"movie-link\"\n      \n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}</ul>\n    </div>\n  );\n};\n\nexport default MoviesList;","import { useState, useEffect, useRef, useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport './MoviesSearchForm.css'\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    search: '',\n  });\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({\n      search: '',\n    });\n  };\n\n  const searchId = useMemo(() => nanoid(), []);\n\n  return (\n    <div className='form-div'>\n      <form onSubmit={handleSubmit} className='form'>\n          <div>\n              <label className='form-label' htmlFor={searchId}>Search movie</label>\n                <div >\n                    <input className='form-input'\n                      id={searchId}\n                      ref={inputRef}\n                      value={state.search}\n                      onChange={handleChange}\n                      required\n                      type=\"text\"\n                      name=\"search\"\n                      placeholder=\"Enter movie name\"/>\n                    <button type=\"submit\" className='form-btn'>\n                      Search\n                    </button>\n                </div>\n          </div>\n        </form>\n    </div>\n  );\n};\n\nexport default MoviesSearchForm;","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n// import Button from 'components/Button/Button';\nimport MoviesSearchForm from 'components/MovieSearch/MoviesSearchForm/MoviesSearchForm';\nimport MoviesList from 'components/MovieSearch/MoviesList/MoviesList';\n\nimport { fetchSearch } from 'api/Api';\n\nimport './MovieSearch.css'\n\nconst MovieSearch = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    // const [totalHits] = useState(0);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const search = searchParams.get('search');\n    const page = searchParams.get('page');\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n            setLoading(true);\n              const { data } = await fetchSearch(search, page);\n               setMovies(prevMovies =>\n            data.results?.length ? [...prevMovies, ...data.results] : prevMovies\n            );\n            //   const newMovies = data.results?.length ? [...prevMovies, ...data.results] : prevMovies;\n\n            // // Сортування за назвою фільму в алфавітному порядку\n            // const sortedMovies = newMovies.sort((a, b) => a.title.localeCompare(b.title));\n\n            // setMovies(sortedMovies);\n            } catch (error) {\n            setError(error.message);\n            } finally {\n            setLoading(false);\n            }\n        };\n\n        if (search && (page === '1' || !page)) {\n            fetchMovies();\n        }\n    }, [search, page]);\n\n\n    const handleSearch = ({ search }) => {\n        setSearchParams({ search, page: 1 });\n        setMovies([]);\n    };\n\n    // const loadMore = () => setSearchParams({ search, page: Number(page) + 1 });\n    \n\n    const isMovies = Boolean(movies.length);        \n  \n\n    return (\n        <div className='search'>\n        <MoviesSearchForm onSubmit={handleSearch} />\n        {error && <p>{error}</p>}\n        {loading && <p>...Loading page</p>}\n            {isMovies && <MoviesList items={movies} />}\n             {/* {isMovies && (\n        <div >\n          <Button onClick={loadMore} type=\"button\">\n            Load more\n          </Button>\n        </div>\n      )} */}\n    </div>\n    );\n}\n   \nexport default MovieSearch","import MovieSearch from \"components/MovieSearch/MovieSearch\";\n\n\nconst MoviesPage = () => {\n  return (\n    <div>\n      <MovieSearch/>\n    </div>\n  )\n};\n\nexport default MoviesPage;"],"names":["API_KEY","options","method","headers","accept","Authorization","instance","axios","baseURL","BASE_URL","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","get","concat","stop","apply","arguments","fetchSearch","_ref2","_callee2","query","_context2","_x","fetchDetails","id","fetchActor","_ref3","_callee3","movieId","_context3","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","items","location","useLocation","_jsx","children","className","map","title","Link","to","state","from","onSubmit","_useState","useState","search","_useState2","_slicedToArray","setState","inputRef","useRef","useEffect","current","focus","reset","searchId","useMemo","size","length","undefined","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","e","preventDefault","_objectSpread","_jsxs","htmlFor","ref","value","onChange","target","name","_defineProperty","required","type","placeholder","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","page","fetchMovies","_yield$fetchSearch","data","sent","prevMovies","_data$results","results","_toConsumableArray","t0","message","finish","isMovies","Boolean","MoviesSearchForm","MoviesList","MovieSearch"],"sourceRoot":""}